# Generated by Django 4.2.23 on 2025-06-30 19:50

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=100, verbose_name="Nom")),
                ("biography", models.TextField(blank=True, verbose_name="Biographie")),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de Naissance"
                    ),
                ),
                (
                    "date_of_death",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de Décès"
                    ),
                ),
            ],
            options={
                "verbose_name": "Auteur",
                "verbose_name_plural": "Auteurs",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom de la Catégorie"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "Catégorie",
                "verbose_name_plural": "Catégories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Titre")),
                (
                    "isbn",
                    models.CharField(
                        blank=True,
                        max_length=13,
                        null=True,
                        unique=True,
                        verbose_name="ISBN",
                    ),
                ),
                (
                    "publication_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de Publication"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "is_digital",
                    models.BooleanField(default=False, verbose_name="Est Numérique"),
                ),
                (
                    "file_upload",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="books/digital/",
                        verbose_name="Fichier Numérique (PDF, EPUB, etc.)",
                    ),
                ),
                (
                    "pages",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Nombre de Pages"
                    ),
                ),
                (
                    "quantity_available",
                    models.IntegerField(
                        default=1, verbose_name="Quantité Disponible (Physique)"
                    ),
                ),
                (
                    "total_quantity",
                    models.IntegerField(
                        default=1, verbose_name="Quantité Totale (Physique)"
                    ),
                ),
                (
                    "acquisition_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Date d'Acquisition",
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="books/covers/",
                        verbose_name="Image de Couverture",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Disponible"),
                            ("on_loan", "En Prêt"),
                            ("damaged", "Endommagé"),
                            ("lost", "Perdu"),
                        ],
                        default="available",
                        max_length=50,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        related_name="books", to="core.author", verbose_name="Auteurs"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.category",
                        verbose_name="Catégorie",
                    ),
                ),
                (
                    "documentation_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="books",
                        to="core.documentationcenter",
                        verbose_name="Centre de Documentation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Livre/Ouvrage",
                "verbose_name_plural": "Livres/Ouvrages",
                "ordering": ["title"],
                "unique_together": {
                    ("documentation_center", "title", "publication_date")
                },
            },
        ),
    ]
